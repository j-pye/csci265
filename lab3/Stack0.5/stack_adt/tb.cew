#================================================================--
# Design Unit  : cew testbench for stack
#
# File Name    : tb.cew
#
# Purpose      : unit testing
#
# Note         :
#
# Limitations  :
#
# Errors       : none known
#
# Modules      : stack_adt::stack
#
# Dependences  : cew
#
# Author       : Peter Walsh, Vancouver Island University
#
# System       : Perl (Linux)
#
#------------------------------------------------------------------
# Revision List
# Version      Author  Date    Changes
# 1.0          PW      Oct 12  New version
#================================================================--

$|=1;
use strict;
use warnings;

include(CewDir/bin/cew.pl)

use lib '../';
use stack_adt::stack;
use exc::exception;
use Try::Tiny;

cew_Variables

# Local Function Load (s, n);
# pushes n values on the stack from
# the sequence 10, 100, 1000 ... 
# note: no exception checking

sub load {
   my $s=shift @_;
   my $n=shift @_;
   
   for (my $i=0; $i<$n; $i++) {
      $s->push(($i+1)*10);
   }
}

#############
# empty stack
#############

my $stack0=stack_adt::stack->new(10);
cew_Ecase($stack0->top(), "empty")
cew_Ecase($stack0->pop(), "empty")

#################
# half full stack
#################

my $stack1=stack_adt::stack->new(10);
cew_Ncase(load($stack1, 5), $stack1->top(), 50, !=)
cew_Ncase($stack1->pop(), $stack1->top(), 40, !=)
cew_Ncase($stack1->pop(), $stack1->top(), 30, !=)

#################
# full stack
#################

my $stack2=stack_adt::stack->new(10);
cew_Ncase(load($stack2, 10), $stack2->top(), 100, !=)
cew_Ecase(,"full")
cew_Ecase($stack2->push(110), "full")
cew_Ncase(, $stack2->top(), 100, !=)
cew_Ncase($stack2->pop(), $stack2->top(), 90, !=)

################
# stress test
################

my $stack3=stack_adt::stack->new(100);

for (my $i=0; $i<100; $i++) {
   cew_Ncase($stack3->push($i), $stack3->top(), $i, !=)
}

for (my $i=99; $i>=0; $i--) {
   cew_Ncase(, $stack3->top(), $i, !=)
   cew_Ncase($stack3->pop(), 0, 0, !=)
}
   
cew_Summary
